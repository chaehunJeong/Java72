<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 
namespace 속성
- SQL문을 찾을 때 주소로 사용한다.
- 유지보수 하기 좋게 의미있는 이름을 지정하라.

 -->  
<mapper namespace="net.bitacademy.java72.step07.v02.BoardDao">
  <!-- 컬럼 이름과 객체의 프로퍼티 이름을 연결한다. -->
  <resultMap type="Board" id="BoardMap">
    <!-- 결과에 대해 객체를 캐시로 관리한다.
         이때 캐시에 저장된 객체를 찾을 때 어떤 값을 사용하는 지 지정하는 것이 좋다.
         키 컬럼에 대해 <id> 태그를 사용하라.
     -->
    <id     column="bno"      property="no" />
    <!-- 컬럼 이름과 프로퍼티 이름이 같을 경우 굳이 정의할 필요가 없다. -->
    <!--  
    <result column="title"    property="title" />
    <result column="content"  property="content" />
    -->
    <result column="cre_dt"   property="createDate" />
    <result column="views"    property="viewCount" />
    <result column="att_file1" property="attachFile1" />
    <result column="att_file2" property="attachFile2" />
    <result column="att_file3" property="attachFile3" />
  </resultMap>
  
  
  
  <!-- 컬럼에 대해 프로퍼티를 자동으로 연결하고 싶으면,
       <resultMap>으로 정의한 것을 사용하라.
   -->
  <select id="list" resultMap="BoardMap">
    SELECT bno, title, cre_dt, views
    FROM board10
    ORDER BY bno desc
  </select>
  
  <!-- 
  parameterType 속성: insert()를 호출할 때 넘겨주는 객체의 타입을 지정한다.
  파라미터 객체의 값 꺼내는 방법
  #{그 객체의 프로퍼티 명}
   -->
  <insert id="insert" parameterType="Board">
    INSERT INTO board10(title,content,pwd,cre_dt)
    values(#{title},#{content},#{password}, now())
  </insert>
  
  <!-- 만약 파라미터 타입이 
    원시 타입(byte,short,int,long,float,double,boolean,char)이라면,
    프로퍼티 이름은 마음대로 적어도 된다.  
  -->
  <delete id="delete" parameterType="int">
    DELETE FROM board10 WHERE bno=#{value}
  </delete>

  <update id="update" parameterType="Board">
    UPDATE board10 SET 
      title=#{title},
      content=#{content} 
    WHERE bno=#{no}      
  </update>
  
  <select id="get" parameterType="int" resultMap="BoardMap">
    SELECT bno, title, content
    FROM board10
    WHERE bno=#{value}
  </select>
</mapper>

















