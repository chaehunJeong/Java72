[step01]
Test01.java
  - 빈(객체)를 생성하는 예전 방식: new 사용
  - 빈을 찾지 못했을 때 예외 발생!

Test02.java
  - 스프링에서 빈(Bean=instance=object=component) 생성을 설정하는 방법
    <bean id="객체이름" 
          class="전체클래스명(패키지명+클래스명)"/>
  - 스프링 빈 컨테이너에서 객체 꺼내기
    ctx.getBean("객체이름")
    => 만약 해당 이름을 가진 객체를 찾지 못한다면, 예외 발생!

Test03.java
  - id 대신 name 속성을 사용하여 빈의 이름을 설정하기
  - id가 없으면 name 속성의 값을 빈의 이름으로 사용한다.\
  <bean name="c1" class="step01.Car"/>
  
  - 빈의 이름을 여러 개 지정하기
    => name 속성의 첫 번째 이름은 빈의 아이디로 사용하고,
       나머지 이름은 빈의 별명으로 등록한다.
    => 중요한 것은 아이디나 별명의 차이점이 없다.
       즉 getBean("아이디 또는 별명")
      <bean name="c2 c3 c4" class="step01.Car"/>
    
    => 공백 대신 콤마(,) 또는 세미콜론(;) 가능하다.
    => name이나 id 속성에 특수 문자를 넣을 수 있다.
      <bean name="okok^^" class="step01.Car"/>
      <bean id="nono^^" class="step01.Car"/>
    
    => id 속성은 공백이나 콤마, 세미콜론을 사용하여 
       이름을 여러 개 지정할 수 없다.
       즉 id는 오직 하나의 이름만 지정 가능하다.
       <bean id="k1 k2 k3" class="step01.Car"/>
       
       위의 선언은 객체의 이름이 "k1 k2 k3"이다.
       "k1", "k2", "k3"가 아니다!  
       
Test04.java
  - 이름을 지정하지 않을 때?
    => 빈의 이름을 지정하지 않으면 클래스 전체 이름을 사용한다.
    => 같은 클래스일 경우, 
       첫 번째 객체는 "전체클래스명", "전체클래스명#0"
       두 번째 부터는 "전체클래스명#n" (n > 0)

Test05.java
  - 생성자 호출하는 방법
  















      